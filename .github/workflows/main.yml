on: issue_comment

jobs:
  pr_commented:
    # This job only runs for pull request comments
    name: PR comment pranjal
    if: ${{ github.event.issue.pull_request }}
    runs-on: ubuntu-latest
    steps:
      - run: |
          echo A comment on PR $NUMBER
        env:
          NUMBER: ${{ github.event.issue.number }}

  issue_commented:
    # This job only runs for issue comments
    name: Issue comment pranjal
    if: ${{ !github.event.issue.pull_request }}
    runs-on: ubuntu-latest
    steps:
      - run: |
          echo A comment on issue $NUMBER
        env:
          NUMBER: ${{ github.event.issue.number }}






###############################################
# name: Trigger on Label Assignment

# on:
#   pull_request:
#     types:
#       - labeled

# jobs:
#   check-label-assignment:
#     runs-on: ubuntu-latest

#     steps:
#     - name: Check for Label Assignment
#       id: check-label
#       run: |
#         labels=$(echo "${{ github.event.pull_request.labels }}" | jq -r '.[].name')
#         if [ -n "${labels}" ]; then
#           echo "Labels Assigned: ${labels}"
#           echo "::set-output name=labels::${labels}"
#         else
#           echo "No labels assigned to the pull request."
#           exit 1
#         fi

#   trigger-workflow-if-label-assigned:
#     needs: check-label-assignment
#     runs-on: ubuntu-latest

#     steps:
#     - name: Trigger Workflow if Label Assigned
#       if: ${{ needs.check-label.outputs.labels != '' }}
#       run: echo "Label assigned to PR. Triggering workflow."












#################################################
# name: Trigger on Issue Reference

# on:
#   pull_request:
#     types:
#       - opened
#       - synchronize
#       - reopened

# jobs:
#   check-issue-reference:
#     runs-on: ubuntu-latest

#     steps:
#     - name: Check for Issue Reference
#       id: check-issue
#       run: |
#         issue_numbers=$(echo "${{ github.event.pull_request.body }}" | grep -Eo '#[0-9]+' | grep -Eo '[0-9]+')
#         if [ -n "${issue_numbers}" ]; then
#           echo "Referenced Issues: ${issue_numbers}"
#           echo "::set-output name=issue_numbers::${issue_numbers}"
#         else
#           echo "No referenced issues found in the pull request body."
#           exit 1
#         fi

#   trigger-workflow-if-issue-referenced:
#     needs: check-issue-reference
#     runs-on: ubuntu-latest

#     steps:
#     - name: Trigger Workflow if Issue Referenced
#       if: ${{ needs.check-issue.outputs.issue_numbers != '' }}
#       run: echo "Issue referenced in PR. Triggering workflow."

#   auto-approve:
#     runs-on: ubuntu-latest
#     needs: trigger-workflow-if-issue-referenced
#     if: github.event_name == 'workflow_run' && github.event.workflow_run.event == 'pull_request'
    
#     steps:
#     - name: Auto-approve pull request
#       uses: actions/github-script@v6
#       with:
#         github-token: ${{ secrets.GITHUB_TOKEN }}
#         script: |
#           const resp = await github.pulls.createReview({
#             owner: context.repo.owner,
#             repo: context.repo.repo,
#             pull_number: context.payload.workflow_run.conclusion === 'success' ? context.payload.workflow_run.pull_requests[0].number : context.payload.workflow_run.pull_requests[0].number,
#             event: 'APPROVE'
#           });
#           console.log(resp);
##############################################################################

# name: Trigger on Issue Reference

# on:
#   pull_request:
#     types:
#       - opened
#       # - synchronize
#       # - reopened

# jobs:
#   check-issue-reference:
#     runs-on: ubuntu-latest

#     steps:
#     - name: Check for Issue Reference
#       id: check-issue
#       run: |
#         issue_numbers=$(echo "${{ github.event.pull_request.body }}" | grep -Eo '#[0-9]+' | grep -Eo '[0-9]+')
#         if [ -n "${issue_numbers}" ]; then
#           echo "Referenced Issues: ${issue_numbers}"
#           echo "::set-output name=issue_numbers::${issue_numbers}"
#         else
#           echo "No referenced issues found in the pull request body."
#           exit 1
#         fi

#   trigger-workflow-if-issue-referenced:
#     needs: check-issue-reference
#     runs-on: ubuntu-latest

#     steps:
#     - name: Trigger Workflow if Issue Referenced
#       if: ${{ needs.check-issue.outputs.issue_numbers != '' }}
#       run: echo "Issue referenced in PR. Triggering workflow."

######################################################
# # This is a basic workflow to help you get started with Actions

# name: CI

# # Controls when the workflow will run
# on: issue_comment
#   # Triggers the workflow on push or pull request events but only for the "main" branch
  
#   # push:
#   #   branches: [ "main" ]
#   # pull_request:
#   #   branches: [ "main" ]

#   # Allows you to run this workflow manually from the Actions tab
#   # workflow_dispatch:

# # A workflow run is made up of one or more jobs that can run sequentially or in parallel
# jobs:
#   # This workflow contains a single job called "build"
#   build:
#     # The type of runner that the job will run on
#     runs-on: ubuntu-latest

#     # Steps represent a sequence of tasks that will be executed as part of the job
#     steps:
#       # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
#       - uses: actions/checkout@v3

#       # Runs a single command using the runners shell
#       - name: Run a one-line script
#         run: echo Hello, world!

#       # Runs a set of commands using the runners shell
#       - name: Run a multi-line script
#         run: |
#           echo Add other actions to build,
#           echo test, and deploy your project.
